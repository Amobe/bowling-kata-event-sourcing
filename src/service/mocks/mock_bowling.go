// Code generated by MockGen. DO NOT EDIT.
// Source: bowling.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBowling is a mock of Bowling interface.
type MockBowling struct {
	ctrl     *gomock.Controller
	recorder *MockBowlingMockRecorder
}

// MockBowlingMockRecorder is the mock recorder for MockBowling.
type MockBowlingMockRecorder struct {
	mock *MockBowling
}

// NewMockBowling creates a new mock instance.
func NewMockBowling(ctrl *gomock.Controller) *MockBowling {
	mock := &MockBowling{ctrl: ctrl}
	mock.recorder = &MockBowlingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBowling) EXPECT() *MockBowlingMockRecorder {
	return m.recorder
}

// Throw mocks base method.
func (m *MockBowling) Throw(id string, hit uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Throw", id, hit)
	ret0, _ := ret[0].(error)
	return ret0
}

// Throw indicates an expected call of Throw.
func (mr *MockBowlingMockRecorder) Throw(id, hit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Throw", reflect.TypeOf((*MockBowling)(nil).Throw), id, hit)
}
